services:
    laravel.test:
        build:
            context: './docker/8.4'
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
        image: 'sail-8.4/app'
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
            - '${APP_PORT:-80}:80'
            - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
            - '${REVERB_PORT:-8080}:8080'
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
            IGNITION_LOCAL_SITES_PATH: '${PWD}'
        volumes:
            - '.:/var/www/html'
        networks:
            - sail
        depends_on:
            - mysql
            - redis
    mysql:
        image: 'mysql/mysql-server:8.0'
        ports:
            - '${FORWARD_DB_PORT:-3306}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: '%'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        volumes:
            - 'sail-mysql:/var/lib/mysql'
            - './docker/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh'
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - mysqladmin
                - ping
                - '-p${DB_PASSWORD}'
            retries: 3
            timeout: 5s
    redis:
        image: 'redis:alpine'
        ports:
            - '${FORWARD_REDIS_PORT:-6379}:6379'
        volumes:
            - 'sail-redis:/data'
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - redis-cli
                - ping
            retries: 3
            timeout: 5s
    minio:
        image: minio/minio:latest
        container_name: minio_storage
        restart: always
        environment:
            MINIO_ROOT_USER: minioadmin
            MINIO_ROOT_PASSWORD: minioadmin
        ports:
            - '9000:9000'
            - '9001:9001'
        command: server --console-address ":9001" /data
        volumes:
            - minio_data:/data
        networks:
            - sail
        healthcheck:
            test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
            interval: 30s
            timeout: 20s
            retries: 3
            start_period: 40s

    minio-setup:
        image: minio/mc:latest
        container_name: minio_setup
        entrypoint: [ "/bin/sh", "-c" ]
        command: |
            "mc alias set myminio http://minio:9000 minioadmin minioadmin

            # Aguardar MinIO ficar pronto
            until mc ls myminio 2>/dev/null; do
                echo 'Aguardando MinIO...'
                sleep 2
            done

            if mc ls myminio/siv-bucket 2>/dev/null; then
                echo 'Bucket siv-bucket já existe.'
            else
                echo 'Criando bucket siv-bucket...'
                mc mb myminio/siv-bucket
            fi

            mc anonymous set download myminio/siv-bucket/patients
            mc anonymous list myminio/siv-bucket

            # Configurar CORS - Método 1: Via arquivo (se funcionar)
            echo 'Configurando CORS via arquivo...'
            if mc cors set myminio/siv-bucket /app/minio-cors.json 2>/dev/null; then
                echo '✅ CORS configurado via arquivo'
            else
                echo '⚠️  Método arquivo falhou, usando método alternativo...'
                # Método 2: Via admin config (mais confiável)
                mc admin config set myminio api cors_allow_origin=\"http://localhost,http://localhost:80,http://localhost:3000,http://localhost:5173,http://127.0.0.1,http://127.0.0.1:80\"
                mc admin config set myminio api cors_allow_methods=\"GET,POST,PUT,DELETE,HEAD\"
                mc admin config set myminio api cors_allow_headers=\"*\"
                mc admin service restart myminio
                echo '✅ CORS configurado via admin config'
            fi

            # Verificar configuração
            echo 'Verificando configuração CORS...'
            mc admin config get myminio api | grep cors || echo 'CORS não encontrado na configuração'

            echo '✅ Configuração do MinIO concluída.'"
        volumes:
            - ./minio-cors.json:/app/minio-cors.json:ro # Mudei para /app
        networks:
            - sail
        depends_on:
            minio:
                condition: service_healthy

networks:
    sail:
        driver: bridge

volumes:
    minio_data:
    sail-mysql:
        driver: local
    sail-redis:
        driver: local
