services:
  laravel-app:
    build:
      context: './docker/8.4'
      dockerfile: Dockerfile.prod
    image: 'siv-prod/app'
    container_name: laravel_app
    restart: always
    ports:
      - "127.0.0.1:8000:80"  # Exposto apenas localmente para o Nginx do host
    environment:
      APP_ENV: production
      APP_DEBUG: false
    volumes:
      - '.:/var/www/html'
      - './storage:/var/www/html/storage'
      - './bootstrap/cache:/var/www/html/bootstrap/cache'
    networks:
      - sail
    depends_on:
      - mysql
      - redis
      - minio

  reverb:
    build:
      context: './docker/8.4'
      dockerfile: Dockerfile.prod
    container_name: reverb_server
    restart: always
    ports:
      - "127.0.0.1:8080:8080"  # Exposto apenas localmente
    command: php artisan reverb:start --host=0.0.0.0 --port=8080
    environment:
      APP_ENV: production
    volumes:
      - '.:/var/www/html'
    networks:
      - sail
    depends_on:
      - laravel-app
      - redis

  minio:
    image: minio/minio:latest
    container_name: minio_storage
    restart: always
    ports:
      - "127.0.0.1:9000:9000"  # Exposto apenas localmente
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data
    volumes:
      - minio_data:/data
    networks:
      - sail

  mysql:
    image: 'mysql/mysql-server:8.0'
    container_name: mysql_db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 'password'
      MYSQL_ROOT_HOST: '%'
      MYSQL_DATABASE: 'sivdb'
      MYSQL_USER: 'sail'
      MYSQL_PASSWORD: 'password'
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
    volumes:
      - 'sail-mysql:/var/lib/mysql'
    networks:
      - sail
    command: 
      - --default-authentication-plugin=mysql_native_password
      - --innodb-buffer-pool-size=1G
      - --innodb-log-file-size=256M
      - --innodb-file-per-table=1

  redis:
    image: 'redis:alpine'
    container_name: redis_cache
    restart: always
    volumes:
      - 'sail-redis:/data'
    networks:
      - sail

  queue-worker:
    build:
      context: './docker/8.4'
      dockerfile: Dockerfile.prod
    container_name: queue_worker
    restart: always
    command: php artisan queue:work --tries=3 --timeout=3600
    environment:
      APP_ENV: production
    volumes:
      - '.:/var/www/html'
    networks:
      - sail
    depends_on:
      - laravel-app
      - redis

  scheduler:
    build:
      context: './docker/8.4'
      dockerfile: Dockerfile.prod
    container_name: scheduler
    restart: always
    command: |
      sh -c "while true; do php artisan schedule:run; sleep 60; done"
    environment:
      APP_ENV: production
    volumes:
      - '.:/var/www/html'
    networks:
      - sail
    depends_on:
      - laravel-app

networks:
  sail:
    driver: bridge

volumes:
  minio_data:
    driver: local
  sail-mysql:
    driver: local
  sail-redis:
    driver: local