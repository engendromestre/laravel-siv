services:
  laravel.test:
    build:
      context: "./docker/8.4"
      dockerfile: Dockerfile
      args:
        WWWGROUP: "${WWWGROUP}"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - "8000:80"
      - "8080:8080"
    environment:
      WWWUSER: "${WWWUSER}"
      LARAVEL_SAIL: 1
      XDEBUG_MODE: "${SAIL_XDEBUG_MODE:-off}"
      XDEBUG_CONFIG: "${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}"
      IGNITION_LOCAL_SITES_PATH: "${PWD}"
    volumes:
      - ".:/var/www/html"
    networks:
      - sail
    depends_on:
      - mysql
      - redis
      - minio

  mysql:
    image: "mysql/mysql-server:8.0"
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: "${DB_PASSWORD}"
      MYSQL_ROOT_HOST: "%"
      MYSQL_DATABASE: "${DB_DATABASE}"
      MYSQL_USER: "${DB_USERNAME}"
      MYSQL_PASSWORD: "${DB_PASSWORD}"
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
    volumes:
      - "sail-mysql:/var/lib/mysql"
      - "./docker/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh"
    networks:
      - sail
    healthcheck:
      test:
        - CMD
        - mysqladmin
        - ping
        - "-p${DB_PASSWORD}"
      retries: 3
      timeout: 5s

  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"
    volumes:
      - "sail-redis:/data"
    networks:
      - sail
    healthcheck:
      test:
        - CMD
        - redis-cli
        - ping
      retries: 3
      timeout: 5s

  minio:
    image: minio/minio:latest
    container_name: minio_storage
    restart: always
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server --console-address ":9001" /data
    volumes:
      - minio_data:/data
    networks:
      - sail
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
      start_period: 40s

  minio-setup:
    image: minio/mc:latest
    container_name: minio_setup
    entrypoint: ["/bin/sh", "-c"]
    command: |
      echo '🚀 Iniciando configuração do MinIO...'
      sleep 15

      mc alias set myminio http://minio:9000 minioadmin minioadmin

      until mc ls myminio 2>/dev/null; do
        echo '⏳ Aguardando MinIO...'
        sleep 5
      done

      echo '✅ Conectado ao MinIO'

      if mc ls myminio/siv-bucket 2>/dev/null; then
        echo '📦 Bucket siv-bucket já existe.'
      else
        echo '📦 Criando bucket siv-bucket...'
        mc mb myminio/siv-bucket
      fi

      echo '🔓 Configurando permissões...'
      mc anonymous set download myminio/siv-bucket
      mc anonymous set upload myminio/siv-bucket
      mc anonymous set public myminio/siv-bucket

      echo '🌐 Configurando CORS...'
      mc admin config set myminio api cors_allow_origin='*'
      mc admin config set myminio api cors_allow_methods='GET,POST,PUT,DELETE,OPTIONS'
      mc admin config set myminio api cors_allow_headers='*'

      echo '✅ MinIO configurado!'
      echo '📸 Bucket: siv-bucket'
      echo '🔗 Console: http://192.16.1.107:9001'
      echo '🔧 Teste: curl -v http://192.16.1.107:9000/siv-bucket/'

      echo '🛑 Encerrando container de setup...'
      exit 0
    depends_on:
      - minio
    networks:
      - sail
    restart: "no"

networks:
  sail:
    driver: bridge

volumes:
  minio_data:
    driver: local
  sail-mysql:
    driver: local
  sail-redis:
    driver: local
